buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven/' }
        maven { url = 'https://plugins.gradle.org/m2/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

apply plugin: 'idea'
apply plugin: 'net.minecraftforge.gradle'

sourceCompatibility = targetCompatibility = "1.8" // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

group = "mod.chiselsandbits"
archivesBaseName = "chiselsandbits"
if (System.getenv().BUILD_NUMBER != null) {//adds the build number to the end of the version string if on a build server
    project.version += ".${System.getenv().BUILD_NUMBER}"
}

repositories {
    maven { url "https://dvs1.progwml6.com/files/maven" }
    maven { url "https://maven.amadornes.com/" }
    flatDir { dirs 'libs' }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2854'

    compileOnly "${mcmp2_version}"
    compileOnly fg.deobf("mezz.jei:jei_1.12.2:4.16.1.302:api")
    runtimeOnly fg.deobf("mezz.jei:jei_1.12.2:4.16.1.302")
}


minecraft {
    mappings channel: 'stable', version: '39-1.12'
    accessTransformer = file('src/main/resources/META-INF/chiselsandbits_at.cfg')
    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            mods {
                codedebug {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                codedebug {
                    source sourceSets.main
                }
            }
        }
    }
}

jar {
    manifest {
        attributes 'FMLAT': 'chiselsandbits_at.cfg'
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.mc_version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.mc_version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

idea { module { inheritOutputDirs = true } }
